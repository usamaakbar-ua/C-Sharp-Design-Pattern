The Observer design pattern defines a one-to-many dependency between 
objects so that when one object changes state, 
all its dependents are notified and updated automatically.

Frequency of use: 5 / 5

high .NET Design Pattern


* Subject  (Stock)
	_ knows its observers. Any number of Observer objects may observe a subject
	_ provides an interface for attaching and detaching Observer objects.

* ConcreteSubject  (IBM)
	_ stores state of interest to ConcreteObserver
	_ sends a notification to its observers when its state changes

* Observer  (IInvestor)
	_ defines an updating interface for objects that should 
	  be notified of changes in a subject.


* ConcreteObserver  (Investor)
	_ maintains a reference to a ConcreteSubject object
	_ stores state that should stay consistent with the subject's
	_ implements the Observer updating interface to keep its state consistent with the subject's